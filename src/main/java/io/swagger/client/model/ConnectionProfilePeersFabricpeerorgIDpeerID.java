/**
 * IBM Blockchain Platform Service API
 * The Blockchain Service API allows you to interact with your blockchain network.  The APIs listed in this doc are authenticated using basic auth, where the username and password correspond to a user org and secret that are included in your service credentials.  See the ConnectionProfile schema under the Models for more information.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.ConnectionProfilePeersFabricpeerorgIDpeerIDTlsCACerts;


/**
 * Information needed to establish a connection to a single peer
 */
@ApiModel(description = "Information needed to establish a connection to a single peer")
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2018-03-28T22:08:33.832-05:00")
public class ConnectionProfilePeersFabricpeerorgIDpeerID   {
  @SerializedName("url")
  private String url = null;

  @SerializedName("eventUrl")
  private String eventUrl = null;

  @SerializedName("grpcOptions")
  private Object grpcOptions = null;

  @SerializedName("tlsCACerts")
  private ConnectionProfilePeersFabricpeerorgIDpeerIDTlsCACerts tlsCACerts = null;

  @SerializedName("x-mspid")
  private String xMspid = null;

  /**
   * The backing database that the peer uses to store its ledger
   */
  public enum XLedgerDbTypeEnum {
    @SerializedName("levelDB")
    LEVELDB("levelDB");

    private String value;

    XLedgerDbTypeEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("x-ledgerDbType")
  private XLedgerDbTypeEnum xLedgerDbType = null;

  @SerializedName("x-installed-chaincode")
  private Object xInstalledChaincode = null;

  public ConnectionProfilePeersFabricpeerorgIDpeerID url(String url) {
    this.url = url;
    return this;
  }

   /**
   * The connection endpoint for submitting transactions
   * @return url
  **/
  @ApiModelProperty(example = "null", value = "The connection endpoint for submitting transactions")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public ConnectionProfilePeersFabricpeerorgIDpeerID eventUrl(String eventUrl) {
    this.eventUrl = eventUrl;
    return this;
  }

   /**
   * The connection endpoint for subscribing to peer events
   * @return eventUrl
  **/
  @ApiModelProperty(example = "null", value = "The connection endpoint for subscribing to peer events")
  public String getEventUrl() {
    return eventUrl;
  }

  public void setEventUrl(String eventUrl) {
    this.eventUrl = eventUrl;
  }

  public ConnectionProfilePeersFabricpeerorgIDpeerID grpcOptions(Object grpcOptions) {
    this.grpcOptions = grpcOptions;
    return this;
  }

   /**
   * Connection parameters to be passed to your GRPC library when connecting to the peer
   * @return grpcOptions
  **/
  @ApiModelProperty(example = "null", value = "Connection parameters to be passed to your GRPC library when connecting to the peer")
  public Object getGrpcOptions() {
    return grpcOptions;
  }

  public void setGrpcOptions(Object grpcOptions) {
    this.grpcOptions = grpcOptions;
  }

  public ConnectionProfilePeersFabricpeerorgIDpeerID tlsCACerts(ConnectionProfilePeersFabricpeerorgIDpeerIDTlsCACerts tlsCACerts) {
    this.tlsCACerts = tlsCACerts;
    return this;
  }

   /**
   * Get tlsCACerts
   * @return tlsCACerts
  **/
  @ApiModelProperty(example = "null", value = "")
  public ConnectionProfilePeersFabricpeerorgIDpeerIDTlsCACerts getTlsCACerts() {
    return tlsCACerts;
  }

  public void setTlsCACerts(ConnectionProfilePeersFabricpeerorgIDpeerIDTlsCACerts tlsCACerts) {
    this.tlsCACerts = tlsCACerts;
  }

  public ConnectionProfilePeersFabricpeerorgIDpeerID xMspid(String xMspid) {
    this.xMspid = xMspid;
    return this;
  }

   /**
   * The MSP ID for the organization that owns this peer
   * @return xMspid
  **/
  @ApiModelProperty(example = "null", value = "The MSP ID for the organization that owns this peer")
  public String getXMspid() {
    return xMspid;
  }

  public void setXMspid(String xMspid) {
    this.xMspid = xMspid;
  }

  public ConnectionProfilePeersFabricpeerorgIDpeerID xLedgerDbType(XLedgerDbTypeEnum xLedgerDbType) {
    this.xLedgerDbType = xLedgerDbType;
    return this;
  }

   /**
   * The backing database that the peer uses to store its ledger
   * @return xLedgerDbType
  **/
  @ApiModelProperty(example = "null", value = "The backing database that the peer uses to store its ledger")
  public XLedgerDbTypeEnum getXLedgerDbType() {
    return xLedgerDbType;
  }

  public void setXLedgerDbType(XLedgerDbTypeEnum xLedgerDbType) {
    this.xLedgerDbType = xLedgerDbType;
  }

  public ConnectionProfilePeersFabricpeerorgIDpeerID xInstalledChaincode(Object xInstalledChaincode) {
    this.xInstalledChaincode = xInstalledChaincode;
    return this;
  }

   /**
   * a list of installed chaincodes on the peer
   * @return xInstalledChaincode
  **/
  @ApiModelProperty(example = "null", value = "a list of installed chaincodes on the peer")
  public Object getXInstalledChaincode() {
    return xInstalledChaincode;
  }

  public void setXInstalledChaincode(Object xInstalledChaincode) {
    this.xInstalledChaincode = xInstalledChaincode;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConnectionProfilePeersFabricpeerorgIDpeerID connectionProfilePeersFabricpeerorgIDpeerID = (ConnectionProfilePeersFabricpeerorgIDpeerID) o;
    return Objects.equals(this.url, connectionProfilePeersFabricpeerorgIDpeerID.url) &&
        Objects.equals(this.eventUrl, connectionProfilePeersFabricpeerorgIDpeerID.eventUrl) &&
        Objects.equals(this.grpcOptions, connectionProfilePeersFabricpeerorgIDpeerID.grpcOptions) &&
        Objects.equals(this.tlsCACerts, connectionProfilePeersFabricpeerorgIDpeerID.tlsCACerts) &&
        Objects.equals(this.xMspid, connectionProfilePeersFabricpeerorgIDpeerID.xMspid) &&
        Objects.equals(this.xLedgerDbType, connectionProfilePeersFabricpeerorgIDpeerID.xLedgerDbType) &&
        Objects.equals(this.xInstalledChaincode, connectionProfilePeersFabricpeerorgIDpeerID.xInstalledChaincode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(url, eventUrl, grpcOptions, tlsCACerts, xMspid, xLedgerDbType, xInstalledChaincode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConnectionProfilePeersFabricpeerorgIDpeerID {\n");
    
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    eventUrl: ").append(toIndentedString(eventUrl)).append("\n");
    sb.append("    grpcOptions: ").append(toIndentedString(grpcOptions)).append("\n");
    sb.append("    tlsCACerts: ").append(toIndentedString(tlsCACerts)).append("\n");
    sb.append("    xMspid: ").append(toIndentedString(xMspid)).append("\n");
    sb.append("    xLedgerDbType: ").append(toIndentedString(xLedgerDbType)).append("\n");
    sb.append("    xInstalledChaincode: ").append(toIndentedString(xInstalledChaincode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

