/**
 * IBM Blockchain Platform Service API
 * The Blockchain Service API allows you to interact with your blockchain network.  The APIs listed in this doc are authenticated using basic auth, where the username and password correspond to a user org and secret that are included in your service credentials.  See the ConnectionProfile schema under the Models for more information.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;


/**
 * A blockchain transaction
 */
@ApiModel(description = "A blockchain transaction")
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2018-03-28T22:08:33.832-05:00")
public class Transaction   {
  @SerializedName("tx_id")
  private String txId = null;

  @SerializedName("instantiate")
  private Boolean instantiate = null;

  @SerializedName("channel_id")
  private String channelId = null;

  @SerializedName("chaincode_id")
  private String chaincodeId = null;

  @SerializedName("timestamp")
  private BigDecimal timestamp = null;

  @SerializedName("creator_msp_id")
  private String creatorMspId = null;

  @SerializedName("endorsements")
  private List<Object> endorsements = new ArrayList<Object>();

  @SerializedName("write_set")
  private List<Object> writeSet = new ArrayList<Object>();

  @SerializedName("params")
  private List<String> params = new ArrayList<String>();

  @SerializedName("channel_update")
  private Boolean channelUpdate = null;

  public Transaction txId(String txId) {
    this.txId = txId;
    return this;
  }

   /**
   * The unique ID of the transaction
   * @return txId
  **/
  @ApiModelProperty(example = "null", value = "The unique ID of the transaction")
  public String getTxId() {
    return txId;
  }

  public void setTxId(String txId) {
    this.txId = txId;
  }

  public Transaction instantiate(Boolean instantiate) {
    this.instantiate = instantiate;
    return this;
  }

   /**
   * True if the transaction instantiated chaincode on a channel.  False otherwise.
   * @return instantiate
  **/
  @ApiModelProperty(example = "null", value = "True if the transaction instantiated chaincode on a channel.  False otherwise.")
  public Boolean getInstantiate() {
    return instantiate;
  }

  public void setInstantiate(Boolean instantiate) {
    this.instantiate = instantiate;
  }

  public Transaction channelId(String channelId) {
    this.channelId = channelId;
    return this;
  }

   /**
   * The name of the channel that the transaction belongs to
   * @return channelId
  **/
  @ApiModelProperty(example = "null", value = "The name of the channel that the transaction belongs to")
  public String getChannelId() {
    return channelId;
  }

  public void setChannelId(String channelId) {
    this.channelId = channelId;
  }

  public Transaction chaincodeId(String chaincodeId) {
    this.chaincodeId = chaincodeId;
    return this;
  }

   /**
   * The unique ID of the instantiated chaincode that was used to generate write sets for the transaction. Can be '-' if the transaction doesn't involve chaincode, such as a genesis transaction
   * @return chaincodeId
  **/
  @ApiModelProperty(example = "null", value = "The unique ID of the instantiated chaincode that was used to generate write sets for the transaction. Can be '-' if the transaction doesn't involve chaincode, such as a genesis transaction")
  public String getChaincodeId() {
    return chaincodeId;
  }

  public void setChaincodeId(String chaincodeId) {
    this.chaincodeId = chaincodeId;
  }

  public Transaction timestamp(BigDecimal timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * Describes when the transaction was committed
   * @return timestamp
  **/
  @ApiModelProperty(example = "null", value = "Describes when the transaction was committed")
  public BigDecimal getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(BigDecimal timestamp) {
    this.timestamp = timestamp;
  }

  public Transaction creatorMspId(String creatorMspId) {
    this.creatorMspId = creatorMspId;
    return this;
  }

   /**
   * The MSP ID of the member that created the transaction
   * @return creatorMspId
  **/
  @ApiModelProperty(example = "null", value = "The MSP ID of the member that created the transaction")
  public String getCreatorMspId() {
    return creatorMspId;
  }

  public void setCreatorMspId(String creatorMspId) {
    this.creatorMspId = creatorMspId;
  }

  public Transaction endorsements(List<Object> endorsements) {
    this.endorsements = endorsements;
    return this;
  }

  public Transaction addEndorsementsItem(Object endorsementsItem) {
    this.endorsements.add(endorsementsItem);
    return this;
  }

   /**
   * A list of signatures that were used to endorse the transaction
   * @return endorsements
  **/
  @ApiModelProperty(example = "null", value = "A list of signatures that were used to endorse the transaction")
  public List<Object> getEndorsements() {
    return endorsements;
  }

  public void setEndorsements(List<Object> endorsements) {
    this.endorsements = endorsements;
  }

  public Transaction writeSet(List<Object> writeSet) {
    this.writeSet = writeSet;
    return this;
  }

  public Transaction addWriteSetItem(Object writeSetItem) {
    this.writeSet.add(writeSetItem);
    return this;
  }

   /**
   * A list of changes that this transaction made to the world state of the channel
   * @return writeSet
  **/
  @ApiModelProperty(example = "null", value = "A list of changes that this transaction made to the world state of the channel")
  public List<Object> getWriteSet() {
    return writeSet;
  }

  public void setWriteSet(List<Object> writeSet) {
    this.writeSet = writeSet;
  }

  public Transaction params(List<String> params) {
    this.params = params;
    return this;
  }

  public Transaction addParamsItem(String paramsItem) {
    this.params.add(paramsItem);
    return this;
  }

   /**
   * A list of parameters that were passed to the chaincode to generate the write set
   * @return params
  **/
  @ApiModelProperty(example = "null", value = "A list of parameters that were passed to the chaincode to generate the write set")
  public List<String> getParams() {
    return params;
  }

  public void setParams(List<String> params) {
    this.params = params;
  }

  public Transaction channelUpdate(Boolean channelUpdate) {
    this.channelUpdate = channelUpdate;
    return this;
  }

   /**
   * True if the transaction altered the configuration of the channel. False otherwise
   * @return channelUpdate
  **/
  @ApiModelProperty(example = "null", value = "True if the transaction altered the configuration of the channel. False otherwise")
  public Boolean getChannelUpdate() {
    return channelUpdate;
  }

  public void setChannelUpdate(Boolean channelUpdate) {
    this.channelUpdate = channelUpdate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Transaction transaction = (Transaction) o;
    return Objects.equals(this.txId, transaction.txId) &&
        Objects.equals(this.instantiate, transaction.instantiate) &&
        Objects.equals(this.channelId, transaction.channelId) &&
        Objects.equals(this.chaincodeId, transaction.chaincodeId) &&
        Objects.equals(this.timestamp, transaction.timestamp) &&
        Objects.equals(this.creatorMspId, transaction.creatorMspId) &&
        Objects.equals(this.endorsements, transaction.endorsements) &&
        Objects.equals(this.writeSet, transaction.writeSet) &&
        Objects.equals(this.params, transaction.params) &&
        Objects.equals(this.channelUpdate, transaction.channelUpdate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(txId, instantiate, channelId, chaincodeId, timestamp, creatorMspId, endorsements, writeSet, params, channelUpdate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Transaction {\n");
    
    sb.append("    txId: ").append(toIndentedString(txId)).append("\n");
    sb.append("    instantiate: ").append(toIndentedString(instantiate)).append("\n");
    sb.append("    channelId: ").append(toIndentedString(channelId)).append("\n");
    sb.append("    chaincodeId: ").append(toIndentedString(chaincodeId)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    creatorMspId: ").append(toIndentedString(creatorMspId)).append("\n");
    sb.append("    endorsements: ").append(toIndentedString(endorsements)).append("\n");
    sb.append("    writeSet: ").append(toIndentedString(writeSet)).append("\n");
    sb.append("    params: ").append(toIndentedString(params)).append("\n");
    sb.append("    channelUpdate: ").append(toIndentedString(channelUpdate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

